<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

	<!--springMvc配置文件描述  -->
	<description>Spring MVC Configuration</description>
	<!-- 加载配置属性文件
    	ignore-unresolvable：可以在加载第一个property-placeholder时出现解析不了的占位符进行忽略掉
     -->
	<!-- <context:property-placeholder ignore-unresolvable="true" location="classpath*:/config.properties" file-encoding="UTF-8"/> -->
	
    <!-- 自动扫描的包名：只扫描控制器的包 -->
    <context:component-scan base-package="com.piaoling.controller" />

    <!-- 默认的注解映射的支持，org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -->
    <mvc:annotation-driven>
    	<!--消息转换器的配置  -->
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.ResourceHttpMessageConverter" />
            <!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter" p:writeAcceptCharset="false">
                <constructor-arg value="UTF-8"/>
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/plain;charset=UTF-8</value>
                        <value>text/html;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
            <!--解析json数据-->
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="features">
                    <list>
                        <value>WriteDateUseDateFormat</value>
                    </list>
                </property>
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                        <value>text/plain;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
            <!--<bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
                <constructor-arg name="marshaller" ref="marshaller"/>
            </bean>-->
            <bean class="org.springframework.http.converter.FormHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.BufferedImageHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.ResourceHttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>



    <!-- 视图解释类    定义跳转的文件的前后缀 -->
    <!-- 视图解析jsp -->
   <!--  <bean id="jspViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="order" value="1"/>
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/view/"/>
        <property name="suffix" value=".jsp"/>
    </bean> -->
    <!-- 视图解析freemarker -->
    <!-- <bean id="freemarkerConfiguration"
           class="org.springframework.beans.factory.config.PropertiesFactoryBean">
         &lt;!&ndash;注释掉的下方代码是指引freemarker的基本信息的配置位置，因为我已经将配置信息移到了applicationContext文件下，所以这里就没必要存在了，不注释也不会有问题的 &ndash;&gt;
        <property name="location" value="/WEB-INF/config/freemarker.properties"/>
     </bean>
     <bean id="FMViewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
         <property name="exposeRequestAttributes" value="true" />
         <property name="exposeSessionAttributes" value="true" />
         <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>
         <property name="prefix" value="/WEB-INF/view/" />
         <property name="suffix" value=".html" />
         <property name="contentType">
             <value>text/html; charset=UTF-8</value>
         </property>

     </bean>-->
     
    <!-- velocity环境配置 -->
     <bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <!--velocity配置文件路径  或者直接用velocityProperties属性  -->
        <property name="configLocation" value="/WEB-INF/config/velocity.properties"/>
       <!-- velocity模板路径  -->
        <property name="resourceLoaderPath" value="/WEB-INF/template"/>
    </bean>
   <!-- velocity视图解析器  -->
   <!--未带有layout配置的解析器  -->
    <!-- <bean id="velocityViewResolver" class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
        <property name="order" value="0"/>
        <property name="contentType" value="text/html;charset=UTF-8"/>
        <property name="cache" value="true"/>
        <property name="suffix" value=".vm"/>
        <property name="toolboxConfigLocation" value="/WEB-INF/toolbox.xml" />
        <property name="layoutUrl" value="layout/layout.vm"/>
        <property name="exposeSpringMacroHelpers" value="true" />
        <property name="exposeSessionAttributes" value="true" />
        <property name="requestContextAttribute" value="request"/>
        <property name="dateToolAttribute" value="dateTool"/>
        <property name="numberToolAttribute" value="numberTool"/>
    </bean> -->
    <!--带有layout配置的解析器  -->
    <bean id="viewResolver"
		class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver">
		<property name="cache" value="false"/><!--是否缓存模板 -->
		<property name="order" value="10" />
		<property name="suffix" value=".vm" />
		<property name="prefix" value="/views/" />
		<property name="layoutUrl" value="/layout/default_layout.vm" />
		<property name="exposeSpringMacroHelpers" value="true" />
		<property name="dateToolAttribute" value="dateTool" />
		<property name="numberToolAttribute" value="numberTool" />
		<property name="toolboxConfigLocation" value="/WEB-INF/toolbox.xml" />
		<property name="contentType" value="text/html;charset=UTF-8"/>
	</bean>


    <!-- 拦截器 -->
    <!-- <mvc:interceptors> <bean class="com.fpx.ce.foundation.preference.PreferenceChangeInterceptor"
        /> <mvc:interceptor> <mvc:mapping path="/page/home"/> <bean class="com.fpx.ce.foundation.user.UserInterceptor"
        /> </mvc:interceptor> <mvc:interceptor> <mvc:mapping path="/service/**" />
        <bean class="com.fpx.ce.foundation.log.LogHandlerInterceptor" /> </mvc:interceptor>
        <mvc:interceptor> <mvc:mapping path="/test/**" /> <mvc:mapping path="/service/**"
        /> <bean class="com.lemon.finder.web.SharedRenderVariableInterceptor" />
        </mvc:interceptor> </mvc:interceptors> -->


    <!-- 对静态资源文件的访问 方案一 （二选一）
    	， 将无法mapping到Controller的path交给default servlet handler处理 
     -->
    <mvc:default-servlet-handler />

    <!-- 对静态资源文件的访问 方案二 （二选一） -->
     <mvc:resources mapping="/static/**" location="/resources/static/" cache-period="31556926"/>
    <!--mvc自动解析文件配置-->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8" />

        <property name="maxUploadSize" value="2000000000" />
    </bean>
</beans>